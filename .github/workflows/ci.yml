name: server

on:
  push:
    tags:
      - 'v.*'
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.setup_tags.outputs.tag}}
    steps:
      - uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791
        if: github.event_name == 'pull_request'
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        with:
          fetch-depth: 0
      - name: Setup tags for docker image
        id: setup_tags
        run: |
          GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD | sed 's/\//-/g')
          GIT_COMMIT=$(git log -1 --format=%h )
          
          DOCKER_TAG=${GIT_BRANCH}-${GIT_COMMIT}
          echo "DOCKER_TAG $DOCKER_TAG"
          echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV
          echo "::set-output name=tag::$DOCKER_TAG"
      - name: Use Node.js
        uses: actions/setup-node@1f8c6b94b26d0feae1e387ca63ccbdc44d27b561
        with:
          always-auth: true
          node-version: 16.x

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache Node.js modules
        uses: actions/cache@b8204782bbb5f872091ecc5eb9cb7d004e35b1fa
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn run build

      - name: Lint
        run: yarn run lint

      - uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
        with:
          name: build.props
          path: artifacts
          retention-days: 1 # The minimum value possible.

  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791
        with:
          fetch-depth: 0
      - name: Login to GCR
        uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ secrets.GCR_EU_DEV_JSON_KEY }}

      - name: Docker build and push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          file: ./Dockerfile
          tags: |
            eu.gcr.io/dev-container-repo/signaling-server:${{ needs.build.outputs.tag }}
          push: true
          context: ./

  check-tag:
    if: ( github.event_name == 'release'&& github.event.release.prerelease )
    runs-on: ubuntu-latest
    steps:
    - name: Check tag convention
      id: check-tag
      run: |
        if [[ ${{ github.event.ref }} =~ refs/tags/.*-rc-v1 ]]; then
            echo "tag_env=kisharnet" >> $GITHUB_OUTPUT
        elif [[ ${{ github.event.ref }} =~ refs/tags/.*-rc-v2 ]]; then
            echo "tag_env=ansharnet" >> $GITHUB_OUTPUT
        fi

  deploy_dev:
    if:  github.ref == 'refs/heads/develop'
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.8.3
    needs:
      - push
      - build
    with:
      app_name: signaling-server
      step_name: deploy-dev
      env_name: dev
      namespace: signaling-server-dev
      create_subns: false
      aws_region: eu-west-2
      role_to_assume: arn:aws:iam::308190735829:role/gh-signaling-server-dev-deployer
      eks_cluster: rdx-works-main-dev
      helmfile_extra_vars: >-
        ci.tag=${{ needs.build.outputs.tag }},
        ci.environment=dev



  deploy_betanet:
    if:  github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' 
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.8.3
    needs:
      - push
      - build
    with:
      app_name: signaling-server
      step_name: deploy-betanet
      env_name: betanet
      namespace: signaling-server-betanet
      create_subns: false
      aws_region: eu-west-2
      role_to_assume: arn:aws:iam::308190735829:role/gh-signaling-server-betanet-deployer
      eks_cluster: rdx-works-main-dev
      helmfile_extra_vars: >-
        ci.tag=${{ needs.build.outputs.tag }},
        ci.environment=betanet

  deploy_kisharnet:
    if: ( github.event_name == 'release' && github.event.release.prerelease && needs.check-tag.outputs.tag_env == 'kisharnet')    
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.8.3
    needs:
      - push
      - build
      - check-tag
    with:
      app_name: signaling-server
      step_name: deploy-kisharnet
      env_name: kisharnet
      namespace: signaling-server-kisharnet
      create_subns: false
      aws_region: eu-west-2
      role_to_assume: arn:aws:iam::821496737932:role/gh-signaling-server-kisharnet-deployer
      eks_cluster: rtlj-prod
      helmfile_extra_vars: >-
        ci.tag=${{ needs.build.outputs.tag }},
        ci.environment=kisharnet
  
  deploy_ansharnet:
    if: ( github.event_name == 'release' && github.event.release.prerelease && needs.check-tag.outputs.tag_env == 'ansharnet')    
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.8.3
    needs:
      - push
      - build
      - check-tag
    with:
      app_name: signaling-server
      step_name: deploy-ansharnet
      env_name: ansharnet
      namespace: signaling-server-ansharnet
      create_subns: false
      aws_region: eu-west-2
      role_to_assume: arn:aws:iam::821496737932:role/gh-signaling-server-ansharnet-deployer
      eks_cluster: rtlj-prod
      helmfile_extra_vars: >-
        ci.tag=${{ needs.build.outputs.tag }},
        ci.environment=ansharnet

  deploy_mainnet:
    if: ( github.event_name == 'release' && !github.event.release.prerelease )    
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.8.3
    needs:
      - push
      - build
    with:
      environment: mainnet
      app_name: signaling-server
      step_name: deploy-mainnet
      env_name: mainnet
      namespace: signaling-server-mainnet
      create_subns: false
      aws_region: eu-west-2
      role_to_assume: arn:aws:iam::821496737932:role/gh-signaling-server-mainnet-deployer
      eks_cluster: rtlj-prod
      helmfile_extra_vars: >-
        ci.tag=${{ needs.build.outputs.tag }},
        ci.environment=mainnet

  deploy_pull_request:
    if: ${{ github.event_name == 'pull_request' }}
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.8.3
    needs:
      - push
      - build
    with:
      app_name: signaling-server
      step_name: deploy-pr
      env_name: pr
      hierarchical_namespace: signaling-server-ci-pr
      namespace: signaling-server-pr-${{ github.event.number }}
      create_subns: true
      aws_region: eu-west-2
      role_to_assume: arn:aws:iam::308190735829:role/gh-signaling-server-pr-deployer
      eks_cluster: rdx-works-main-dev
      helmfile_extra_vars: >-
        ci.tag=${{ needs.build.outputs.tag }},
        ci.prNumber=${{ github.event.number }},
        ci.environment=pr
