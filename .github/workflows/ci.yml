name: server

on:
  push:
    tags:
      - 'v.*'
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cancel_running_workflows:
    name: Cancel running workflows
    runs-on: ubuntu-20.04
    steps:
      - name: cancel running workflows
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.setup_tags.outputs.tag}}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: 16.x

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache Node.js modules
        uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn run build

      - name: Lint
        run: yarn run lint

      - name: Setup tags for docker image
        id: setup_tags
        run: |
            GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD | sed 's/\//-/g')
            GIT_COMMIT=$(git log -1 --format=%h )

            DOCKER_TAG=${GIT_BRANCH}-${GIT_COMMIT}
            echo "DOCKER_TAG $DOCKER_TAG"
            echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV
            echo "::set-output name=tag::$DOCKER_TAG"

      - uses: actions/upload-artifact@v2.3.1
        with:
          name: build.props
          path: artifacts
          retention-days: 1 # The minimum value possible.

  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ secrets.GCR_EU_DEV_JSON_KEY }}

      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          tags: |
            eu.gcr.io/dev-container-repo/signaling-server:${{ needs.build.outputs.tag }}
          push: true
          context: ./

  deploy_dev:
    if:  github.ref == 'refs/heads/main'
    uses: ./.github/workflows/deploy.yml
    needs:
      - push
      - build
    with:
      env_name: dev
      namespace: signaling-server-dev
      image_tag: "${{ needs.build.outputs.tag }}"
      aws_region: eu-west-2
      role_to_assume: arn:aws:iam::308190735829:role/gh-signaling-server-dev-deployer

  deploy_pull_request:
    if: ${{ github.event_name == 'pull_request' }}
    uses: ./.github/workflows/deploy.yml
    needs:
      - push
      - build
    with:
      env_name: pr
      namespace: signaling-server-pr-${{ github.event.number }}
      pr_number: ${{ github.event.number }}
      create_subns: "true"
      image_tag: "${{ needs.build.outputs.tag }}"
      aws_region: eu-west-2
      role_to_assume: arn:aws:iam::308190735829:role/gh-signaling-server-pr-deployer
