server:
  port: 4000
  logLevel: info
  nodeEnv: production

redis:
  sub:
    host: redis-master
  pub:
    host: redis-master
  port: 6379
  password: redis

docker:
  secrets:
    region: eu-west-1
    name: eu.gcr.io/dev-container-repo

replicaCount: 2

image:
  repository: eu.gcr.io/dev-container-repo/signaling-server
  pullPolicy: IfNotPresent
  tag: ''

imagePullSecrets:
  - name: docker-eu-gcr-dev

nameOverride: ''
fullnameOverride: ''

serviceAccount:
  create: true
  annotations: {}
  name: ''

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 4000

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
    nginx.ingress.kubernetes.io/server-snippets: |
      location / {
       proxy_set_header Upgrade $http_upgrade;
       proxy_http_version 1.1;
       proxy_set_header X-Forwarded-Host $http_host;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_set_header X-Forwarded-For $remote_addr;
       proxy_set_header Host $host;
       proxy_set_header Connection "upgrade";
       proxy_cache_bypass $http_upgrade;
      }
  hosts:
    - host: signaling-server-dev.extratools.works
      paths:
        - path: /
          backend:
            serviceName: signaling-server
            servicePort: 4000
  tls:
    - hosts:
        - signaling-server-dev.extratools.works

javascriptHeap: 13000
resources:
  limits:
    cpu: 1200m
    memory: 6Gi
  requests:
    cpu: 1200m
    memory: 2Gi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 20
  targetCPUUtilizationPercentage: 60

nodeSelector:
  radixdlt.com/tier: 'signaling-server'

tolerations:
  - key: 'signaling-server'
    operator: 'Equal'
    value: 'true'
    effect: 'NoSchedule'

affinity: {}

metrics:
  enabled: true
  port: 4000
  serviceMonitor:
    path: /metrics
    interval: 15s
